- Write Character::testMapCollisions()
	-> Create 'TilesetData' namespace
		=> Tables like in the other games
	-> Create 'TilesData' namespace
		=> A big enum with all the tiles types
	-> Create 'MapHelper' namespace
		=> Functions like 'inTiles', 'passable', etc...
	-> Manager Player states to display 'pushing' animation when colliding
- Add 'Weapon' pure virtual class, friend of 'Player' and child of 'Sprite'
	-> Add a virtual function 'action()'
- Add 'Sword' class, child of 'Weapon'
- Add 'MapManager' and 'CharacterManager'
- Add 'Enemy' pure virtual class, child of 'Character'
- Should write a class "Scene":
	-> Contains a Map
	-> Contains a std::vector of Entity
	-> Contains infos for Entity
	-> Sets the way each Entity interacts with another
	-> Draws on-map animations
- Add 'SceneManager'
