===== TODO =====
- Add NPCs
	=> Create a class 'Message' or 'NPCMessage' which could contain actions,
	   conditions, etc.
		-> Improve 'MessageBox' to handle choices
	=> Check the real hitbox of Link thanks to NPCs which don't have rounded
	   corners
		-> Write a 'MapCollisionHandler'
	=> Fix remaining issues
		-> Fix the conflict between button A's action and NPC's dialog
		-> Link can be displayed behind and in front of a NPC in the original game
			=> BIG ISSUE: I think I'll need two sets of SceneObjects, the ones in front of the player, the others behind
		-> NPC animation should be stopped when his message is displayed
			=> I think using Sprite::pause could be a good idea
- Implement projectiles for Octoroks
- Octorok should drop collectables
- Remove sword loading animation and replace it by palette switch
- Add 'PotFactory' and 'BlockFactory'
	-> A Pot is movable in all ways
	-> Block can be moved once only, or not at all, and requires the way it can be moved
- Add power bracelet
	-> Pots and grass are liftable
	=> Add state "Lifting" for player
- Improve sword positions
- Improve OpenGL code
	=> Use model matrix instead of raw positions
		-> Base class Transformable?
	=> Write a class VertexArray, and use it in 'Image' and 'Rectangle'
- Add more debug tools, like a Logger class
- Add more unit tests

===== REFACTORING ISSUES =====
- Fix grass objects hitbox
- Fix player/button collision when using sword
- Sword position when player is hurt at the same time he uses it is weird
	=> Slow down game to see what actually happens
- HurtMovement can stop if player is stopped?
	-> Check the behaviour in the original game
	=> Check isMoving flag
- The tile under link should be destroyed by his spin attack
- Find a better way to check if the player is facing a chest

===== OTHER ISSUES ======
- Player and Octoroks can be pushed out of the map during HurtMovement
	=> Check in PlayerFactory::mapCollisions, if hurt so go to ScrollingTransition, else
	   block him
- Octorok's HurtMovement speed too slow?
	=> Check the original game, and adapt the speed
- Improve palette system
	=> Look at KubKraft and improve Shader class
	=> Move palette system into other files
- Rupees are added one by one to the counter in the original game
	- There's also a sound effect
- Check sound effect channels in real game
	- For example, is it possible to hear sword loading sound anymore when link releases spin attack?
	- It's not possible to hear text 'clicks' during 'tadaaaaaaa' (new item)
	=> Define channel in constructor (and 'load'), so from Sound.cpp
- Fix grassDestroy animation
	=> Rip the original
- Fix 'moonwalk' bug
	=> Up and Down can't be pressed at the same time
	=> Left and Right can't be pressed at the same time
	=> Look at the original game and look at link's behaviour when it's the case
- Player can be teleported when hurt
	=> Check if player is hurt before teleportation

===== TODO AFTER ENGINE IS FINISHED =====
- Improve game for OpenGL ES and try on Android
- Write a little game editor with Qt to add content if needed, it needs:
	- A Map editor
	- A SceneObject editor

